<%- include("../server-scripts/utilities") %>


<!DOCTYPE html>
<html>
    <head>
        <title> <%= channel.displayName %> </title>
        <%- include('partials/head_meta.ejs') %> 
        <link rel="stylesheet" type="text/css" href="/vod.css">
    </head>    
    <body>
        <!-- PROFILE HEADER -->
        <!-- PROFILE HEADER -->
        <!-- PROFILE HEADER -->
        
        <%- include('navbar/navbar.ejs') %> 
        <%- include('channelHeader.ejs', {"channel": channel, "isShowBack": true}) %>
        
        <div>
            <%- include('vodHeader.ejs', {"vod": vod, "isShowRaw": true}) %>
        </div>

        <!-- TOGGLE STICKY PLAYER -->
        <div>
            <button 
                id="toggle-btn"
                onclick="(() => {
                    let iframe = document.querySelector('#twitch-iframe')
                    iframe.classList.toggle('sticky-iframe')
                    let msg = iframe.classList.contains('sticky-iframe') ? '☑' : '' // '✓'
                    document.querySelector('#on-off-sticky').innerText = msg
                })()"
                > Toggle sticky player
            </button>
            <span id="on-off-sticky"> </span>
        </div>

        <!-- IFRAME PLAYER -->
        <div id="twitch-iframe"></div>

        <!-- IFRAME PLAYER JAVASCRIPT -->
        <script src= "https://player.twitch.tv/js/embed/v1.js"></script>
        <script type="text/javascript">
            let player;
            window.addEventListener("load", e => {
                console.log('loaded twitch iframe"')
                console.log(isMobile() )
                var options = {
                    width: ( window.innerWidth <= 640 ? '100%' : 640),
                    height: ( window.innerWidth <= 640 ? 230 : 360),
                    video: <%= vod.id %>,
                    autoplay: false,
                    parent: ["prod-captions.bski.one"]
                };
                player = new Twitch.Player("twitch-iframe", options);
                console.log(player.getVolume())
                player.setVolume(0);
                setTimeout(() => {player.setVolume(0) }, 1000)
                
            })
            
          function seekIframe(time) {
            player.seek(time)
          }
        </script>

        <hr/>
        <!-- MAIN TRANCRIPT -->
        <% 
        let i = 0;
        for (let segment of transcript_json) {
            if (i==0) {
                console.log("vod's first segment: ", segment)
            }
            i++
            let sec = String(parseInt(segment.start) % 60).padStart(2,0); // -> 03
            let min = Math.floor(parseInt(segment.start) / 60)
            let timestamp = min + "m" + sec + "s";
        %>
            <div class="vod_cue"> 
                <% 
                let iframe_time = Math.floor(segment.start)
                let start = Number(Math.round(segment.start)).toFixed(2)
                let end   = Number(Math.round(segment.end)).toFixed(2)
                start = secondsToHHmmSS(start)
                end = secondsToHHmmSS(end) 
                %>
                <span class="vod_timestamp" onclick="(() => seekIframe(<%= iframe_time %>))()">[<%= start %> → <%= end %>]</span>
                <span>
                    <p>
                    <%= segment.text %>
                    </p>
                </span>
            </div>
        <% } %>
        <br>
        <br>
        <br>
        <br>

    </body>
</html>
