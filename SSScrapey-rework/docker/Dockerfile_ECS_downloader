####################################################################
# BUILD
# docker build --build-arg ENV_TYPE=prod --no-cache -t cbrodski/downloader:official_v2 -f Dockerfile_ECS_downloader  .
# docker build --build-arg ENV_TYPE=dev  --no-cache -t cbrodski/downloader:official_v2_dev -f Dockerfile_ECS_downloader  .

# DEBUG `RUN`
# docker run --env-file .\.env -e ENV=dev cbrodski/downloader:official_v2
# docker run --env-file .\.env -e ENV=dev -it cbrodski/downloader:official_v2 /bin/bash
# docker run -e ENV=dev -it cbrodski/downloader:official_v2 /bin/bash

# PUSH
# docker push cbrodski/downloader:official_v2
# docker push cbrodski/downloader:official_v2_dev
####################################################################
FROM python:3.10.13-bullseye

LABEL version="1.0"
LABEL description="Runs MicroDownloader. Downloads audio, compresses it, puts in s3, ready for Transcriber"
LABEL maintainer="your-email@example.com"
LABEL url="https://github.com/Brodski/scraper-dl-vids"
LABEL build_date="2024-01-01"
LABEL vendor="Bski Inc."
LABEL license="Bski"


# Arguments
ARG ENV_TYPE=dev
ENV ENV=${ENV_TYPE}

###########
# Project #
###########
WORKDIR /app
RUN apt update 
RUN apt-get update
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y tzdata 
RUN apt install git -y 
RUN git clone https://github.com/Brodski/scraper-dl-vids.git 
COPY cacert-2023-08-22.pem /app/scraper-dl-vids/SSScrapey-rework/cacert-2023-08-22.pem


#######
# Pip #
#######    
WORKDIR /app
RUN apt install curl  -y 
RUN curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py \
    && python get-pip.py pip==23.0.1 \
    && pip --version \
    && rm get-pip.py 
    
################
# Dependencies #
################
WORKDIR /app/scraper-dl-vids/SSScrapey-rework/docker
RUN if [ "${ENV}" = "dev" ]; then \
        git fetch origin dev && \
        git checkout dev && \
        git reset --hard origin/dev && \
        git pull origin dev --force; \
    else \
        git reset --hard origin/master ; \
        git pull origin master --force ; \
        echo "Running in production mode" ; \
    fi
RUN pip install -r requirements_downloader.txt \
    && apt-get install ffmpeg -y 

#################
# Update Branch #
#################
WORKDIR /app/scraper-dl-vids/SSScrapey-rework/docker
COPY dock_setup.sh dock_setup.sh
RUN chmod +x dock_setup.sh

######
# GO #
######
WORKDIR /app/scraper-dl-vids/SSScrapey-rework/src
CMD echo "NOT DONE!!!!!!!!!!!!" ; \
    sh dock_setup.sh ; \
    python --version ; \
    python kickDownloader.py && \
    echo "DONE!!!!!!!!!!!!" ; 